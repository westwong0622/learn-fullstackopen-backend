{"version":3,"sources":["components/Notification.js","components/Togglable.js","components/LoginForm.js","components/NoteForm.js","components/Note.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Notification","message","className","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","displayName","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","id","type","value","name","onChange","NoteForm","addNote","newNote","setNewNote","event","preventDefault","content","date","Date","important","Math","random","target","console","log","Note","showAll","note","toString","toggleImportance","removeNote","Footer","color","fontStyle","fontSize","token","getAll","request","axios","get","nonExisting","then","response","data","concat","create","newObject","a","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","login","credentials","App","setUsername","setPassword","errorMessage","setErrorMessage","user","setUser","setShowAll","notes","setNotes","noteFormRef","useRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","userData","JSON","parse","noteObject","trim","returnedNote","current","handleLogin","loginService","setItem","stringify","setTimeout","removeItem","map","key","find","n","changedNote","catch","error","alert","filter","toggleImportanceOf","removeNoteOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKC,UAAU,SAASD,ICJ3BE,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAKF,6BACE,yBAAKE,MAAOL,GACV,4BAAQM,QAASH,GAAmBR,EAAMY,cAE5C,yBAAKF,MAAOH,EAAiBX,UAAU,oBACpCI,EAAMa,SACP,4BAAQF,QAASH,GAAjB,eAURX,EAAUiB,YAAc,YAETjB,QCYAkB,EA/CG,SAAC,GAMZ,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,6BACE,qCACA,0BAAMC,SAAUL,GACd,wCAEE,2BACEM,GAAG,WACHC,KAAK,OACLC,MAAOL,EACPM,KAAK,WACLC,SAAUT,KAGd,wCAEE,2BACEK,GAAG,WACHC,KAAK,WACLC,MAAOJ,EACPK,KAAK,WACLC,SAAUR,KAGd,4BAAQI,GAAG,eAAeC,KAAK,UAA/B,YCFOI,EA9BE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACF1B,mBAAS,IADP,mBACzB2B,EADyB,KAChBC,EADgB,KAmBhC,OACE,6BACE,iDACA,0BAAMT,SAdS,SAACU,GAClBA,EAAMC,iBACNJ,EAAQ,CACNK,QAASJ,EACTK,KAAM,IAAIC,KACVC,UAAWC,KAAKC,SAAW,KAG7BR,EAAW,MAOP,2BAAON,MAAOK,EAASH,SApBR,SAACK,GACpBD,EAAWC,EAAMQ,OAAOf,OACxBgB,QAAQC,IAAIV,EAAMQ,OAAOf,UAmBrB,4BAAQD,KAAK,UAAb,WCTOmB,EAfF,SAAC1C,GACZ,OAAIA,EAAM2C,SAAW3C,EAAM4C,KAAKR,UAE5B,wBAAIxC,UAAU,QACXI,EAAM4C,KAAKtB,GADd,KACmB,8BAAOtB,EAAM4C,KAAKX,SADrC,IACsD,IACnDjC,EAAM4C,KAAKR,UAAUS,WAAY,IAClC,4BAAQlC,QAASX,EAAM8C,kBAAvB,UAAyD,IACzD,4BAAQnC,QAASX,EAAM+C,YAAvB,WAIG,MCMIC,EAjBA,WAOb,OACE,yBAAKtC,MAPa,CAClBuC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uG,gBCRFC,EAAQ,KAmCG,GACbC,OA9Ba,WACb,IAAMC,EAAUC,IAAMC,IATR,cAURC,EAAc,CAClBnC,GAAI,IACJW,QAAS,mCACTC,KAAM,2BACNE,WAAW,GAEb,OAAOkB,EAAQI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAOJ,OAuBvDK,OApBU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAef,IAFf,SAIUG,IAAMa,KAvBf,aAuB6BL,EAAWE,GAJzC,cAIPN,EAJO,yBAKNA,EAASC,MALH,2CAAH,sDAqBVS,OAba,SAAC/C,EAAIyC,GAElB,OADgBR,IAAMe,IAAN,UA5BF,aA4BE,YAAwBhD,GAAMyC,GAC/BL,MAAK,SAACC,GAAD,OAAcA,EAASC,SAY3CW,OATa,SAACjD,GAEd,OADgBiC,IAAMiB,OAAN,UAjCF,aAiCE,YAA2BlD,IAC5BoC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ3Ca,SAtCe,SAACC,GAChBtB,EAAK,iBAAasB,KCEL,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,sEACWT,IAAMa,KAHf,aAG6BQ,GAD/B,cACNjB,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCwKIiB,EAjKH,WAAO,IAAD,EACgB3E,mBAAS,IADzB,mBACTiB,EADS,KACC2D,EADD,OAEgB5E,mBAAS,IAFzB,mBAETkB,EAFS,KAEC2D,EAFD,OAGwB7E,mBAAS,MAHjC,mBAGT8E,EAHS,KAGKC,EAHL,OAIQ/E,mBAAS,MAJjB,mBAITgF,EAJS,KAIHC,EAJG,OAMcjF,oBAAS,GANvB,mBAMTyC,EANS,KAMAyC,EANA,OAOUlF,mBAAS,IAPnB,mBAOTmF,EAPS,KAOFC,EAPE,KASVC,EAAcC,mBASpBC,qBAPqB,WACnBjD,QAAQC,IAAI,UACZiD,EAAYrC,SAASK,MAAK,SAACiC,GACzBnD,QAAQC,IAAI,qBACZ6C,EAASK,QAGW,IAWxBF,qBATqB,WACnB,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMI,EAAWC,KAAKC,MAAMN,GAC5BT,EAAQa,GACRN,EAAYjB,SAASuB,EAAS5C,UAIV,IAExB,IAIMxB,EAAU,SAACuE,GACmB,KAA9BA,EAAWlE,QAAQmE,QACrBV,EAAY5B,OAAOqC,GAAYzC,MAAK,SAAC2C,GACnC7D,QAAQC,IAAI4D,GACZf,EAASD,EAAMxB,OAAOwC,IACtBd,EAAYe,QAAQ9F,uBAmCpB+F,EAAW,uCAAG,WAAOxE,GAAP,eAAAiC,EAAA,6DAClBxB,QAAQC,IAAI,kBAAmBtB,EAAUC,GACzCW,EAAMC,iBAFY,kBAIOwE,EAAa7B,MAAM,CACxCxD,WACAC,aANc,OAIV4E,EAJU,OAShBH,OAAOC,aAAaW,QAClB,oBACAR,KAAKS,UAAUV,IAGjBN,EAAYjB,SAASuB,EAAS5C,OAC9B+B,EAAQa,GACRlB,EAAY,IACZC,EAAY,IAjBI,kDAmBhBE,EAAgB,qBAChB0B,YAAW,WACT1B,EAAgB,QACf,KAtBa,0DAAH,sDAkDjB,OACE,6BACE,qCACA,kBAAC,EAAD,CAActF,QAASqF,IACb,OAATE,EAfH,kBAAC,EAAD,CAAWtE,YAAY,cACrB,kBAAC,EAAD,CACEO,SAAUA,EACVC,SAAUA,EACVH,qBAAsB,gBAAGsB,EAAH,EAAGA,OAAH,OAAgBuC,EAAYvC,EAAOf,QACzDN,qBAAsB,gBAAGqB,EAAH,EAAGA,OAAH,OAAgBwC,EAAYxC,EAAOf,QACzDR,aAAcuF,KAYd,6BACE,6BACGrB,EAAKzD,KADR,cACwB,4BAAQd,QAhCpB,WAClBkF,OAAOC,aAAac,WAAW,qBAC/BzB,EAAQ,QA8BsB,WA1B9B,kBAAC,EAAD,CAAWvE,YAAY,WAAWX,IAAKsF,GACrC,kBAAC,EAAD,CAAU3D,QAASA,MA8BnB,6BACE,gDACmBe,EAAQE,WAAY,IACrC,4BAAQlC,QA/GM,SAACoB,GACrBqD,GAAYzC,KA8GN,eAAqD,KAEvD,4BACG0C,EAAMwB,KAAI,SAACjE,GAAD,OACT,kBAAC,EAAD,CACEkE,IAAKlE,EAAKtB,GACVsB,KAAMA,EACND,QAASA,EACTG,iBAAkB,kBAzGH,SAACxB,GAC1B,IAAMsB,EAAOyC,EAAM0B,MAAK,SAACC,GAAD,OAAOA,EAAE1F,KAAOA,KAClC2F,EAAW,2BAAQrE,GAAR,IAAcR,WAAYQ,EAAKR,YAEhDsD,EACGrB,OAAO/C,EAAI2F,GACXvD,MAAK,SAAC2C,GACLf,EAASD,EAAMwB,KAAI,SAACG,GAAD,OAAQA,EAAE1F,KAAOA,EAAK0F,EAAIX,SAE9Ca,OAAM,SAACC,GACNC,MAAM,aAAD,OAAcxE,EAAKX,QAAnB,sCACLqD,EAASD,EAAMgC,QAAO,SAACL,GAAD,OAAOA,EAAE1F,KAAOA,SA8FRgG,CAAmB1E,EAAKtB,KAChDyB,WAAY,kBA3FH,SAACzB,GACpB,IAAMsB,EAAOyC,EAAM0B,MAAK,SAACC,GAAD,OAAOA,EAAE1F,KAAOA,KACxCkB,QAAQC,IAAIG,GAEZ8C,EACGnB,OAAOjD,GACPoC,MAAK,SAAC2C,GACLf,EAASD,EAAMgC,QAAO,SAACL,GAAD,OAAOA,EAAE1F,KAAOA,SAEvC4F,OAAM,SAACC,GACNC,MAAM,aAAD,OAAcxE,EAAKX,QAAnB,sCACLqD,EAASD,EAAMgC,QAAO,SAACL,GAAD,OAAOA,EAAE1F,KAAOA,SAgFdiG,CAAa3E,EAAKtB,YAK5C,kBAAC,EAAD,Q,MCjKNkG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b5c7e04b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"username\"\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nconst NoteForm = ({ addNote }) => {\n  const [newNote, setNewNote] = useState(\"\");\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const submitNote = (event) => {\n    event.preventDefault();\n    addNote({\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    });\n\n    setNewNote(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n      <form onSubmit={submitNote}>\n        <input value={newNote} onChange={handleChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NoteForm;\n","import React from \"react\";\n\nconst Note = (props) => {\n  if (props.showAll || props.note.important) {\n    return (\n      <li className=\"note\">\n        {props.note.id}: <span>{props.note.content}</span>:{\" \"}\n        {props.note.important.toString()}{\" \"}\n        <button onClick={props.toggleImportance}>Change</button>{\" \"}\n        <button onClick={props.removeNote}>Remove</button>\n      </li>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n  setToken,\n};\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport LoginForm from \"./components/LoginForm\";\nimport NoteForm from \"./components/NoteForm\";\nimport Note from \"./components/Note\";\nimport Footer from \"./components/Footer\";\n\nimport noteService from \"./services/notes\";\nimport loginService from \"./services/login\";\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [user, setUser] = useState(null);\n\n  const [showAll, setShowAll] = useState(true);\n  const [notes, setNotes] = useState([]);\n\n  const noteFormRef = useRef();\n\n  const getNotesHook = () => {\n    console.log(\"effect\");\n    noteService.getAll().then((initialNotes) => {\n      console.log(\"promise fulfilled\");\n      setNotes(initialNotes);\n    });\n  };\n  useEffect(getNotesHook, []);\n\n  const getTokenHook = () => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedNoteAppUser\");\n    if (loggedUserJSON) {\n      const userData = JSON.parse(loggedUserJSON);\n      setUser(userData);\n      noteService.setToken(userData.token);\n    }\n    // window.localStorage.clear();\n  };\n  useEffect(getTokenHook, []);\n\n  const showAllChange = (event) => {\n    setShowAll(!showAll);\n  };\n\n  const addNote = (noteObject) => {\n    if (noteObject.content.trim() !== \"\") {\n      noteService.create(noteObject).then((returnedNote) => {\n        console.log(returnedNote);\n        setNotes(notes.concat(returnedNote));\n        noteFormRef.current.toggleVisibility();\n      });\n    }\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)));\n      })\n      .catch((error) => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const removeNoteOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    console.log(note);\n\n    noteService\n      .remove(id)\n      .then((returnedNote) => {\n        setNotes(notes.filter((n) => n.id !== id));\n      })\n      .catch((error) => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleLogin = async (event) => {\n    console.log(\"logging in with\", username, password);\n    event.preventDefault();\n    try {\n      const userData = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem(\n        \"loggedNoteAppUser\",\n        JSON.stringify(userData)\n      );\n\n      noteService.setToken(userData.token);\n      setUser(userData);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n    // console.log(\"logging in with\", username, password);\n  };\n\n  const clickLogout = () => {\n    window.localStorage.removeItem(\"loggedNoteAppUser\");\n    setUser(null);\n  };\n\n  const noteForm = () => (\n    <Togglable buttonLabel=\"Add note\" ref={noteFormRef}>\n      <NoteForm addNote={addNote} />\n    </Togglable>\n  );\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"Show login\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  );\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <div>\n            {user.name} logged-in <button onClick={clickLogout}>Logout</button>\n          </div>\n          {noteForm()}\n        </div>\n      )}\n      <div>\n        <div>\n          Show all notes: {showAll.toString()}{\" \"}\n          <button onClick={showAllChange}>Show Change</button>{\" \"}\n        </div>\n        <ul>\n          {notes.map((note) => (\n            <Note\n              key={note.id}\n              note={note}\n              showAll={showAll}\n              toggleImportance={() => toggleImportanceOf(note.id)}\n              removeNote={() => removeNoteOf(note.id)}\n            />\n          ))}\n        </ul>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}