{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","props","showAll","note","important","className","id","content","toString","onClick","toggleImportance","removeNote","request","axios","get","nonExisting","date","then","response","data","concat","newObject","post","put","delete","Footer","style","color","fontStyle","fontSize","App","useState","setShowAll","notes","setNotes","newNote","setNewNote","useEffect","console","log","noteService","initialNotes","event","value","onChange","target","preventDefault","noteObject","Date","Math","random","returnedNote","map","key","find","changedNote","catch","error","alert","filter","toggleImportanceOf","removeNoteOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bded72c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = (props) => {\n  if (props.showAll || props.note.important) {\n    return (\n      <li className='note'>{props.note.id}: {props.note.content}: {props.note.important.toString()} <button onClick={props.toggleImportance}>Change</button> <button onClick={props.removeNote}>Remove</button></li>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Note\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/Note\";\n\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [showAll, setShowAll] = useState(true);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n\n  const hook = () => {\n    console.log(\"effect\");\n    noteService.getAll().then((initialNotes) => {\n      console.log(\"promise fulfilled\");\n      setNotes(initialNotes);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const showAllChange = (event) => {\n    setShowAll(!showAll);\n  };\n\n  const newNoteChange = (event) => {\n    setNewNote(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const addNewNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      console.log(returnedNote);\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter((note) => note.id !== id));\n      });\n  };\n\n  const removeNoteOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n\n    noteService\n      .remove(id)\n      .then((returnedNote) => {\n        setNotes(notes.filter((note) => note.id !== id));\n      })\n      .catch((error) => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter((note) => note.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h2>Notes</h2>\n      <div>\n        Show all notes: {showAll.toString()}{\" \"}\n        <button onClick={showAllChange}>Change</button>{\" \"}\n      </div>\n      <div>\n        <input value={newNote} onChange={newNoteChange} />{\" \"}\n        <button onClick={addNewNote}>Add</button>\n      </div>\n      <ul>\n        {notes.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            showAll={showAll}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n            removeNote={() => removeNoteOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n      Test Depoly\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}