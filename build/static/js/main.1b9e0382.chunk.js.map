{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","props","showAll","note","important","className","id","content","toString","onClick","toggleImportance","removeNote","request","axios","get","nonExisting","date","then","response","data","concat","newObject","post","put","delete","Footer","style","color","fontStyle","fontSize","App","useState","setShowAll","notes","setNotes","newNote","setNewNote","useEffect","console","log","noteService","initialNotes","event","value","onChange","target","preventDefault","noteObject","Date","Math","random","returnedNote","map","key","find","changedNote","catch","error","alert","filter","toggleImportanceOf","removeNoteOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b9e0382.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = (props) => {\n  if (props.showAll || props.note.important) {\n    return (\n      <li className='note'>{props.note.id}: {props.note.content}: {props.note.important.toString()} <button onClick={props.toggleImportance}>Change</button> <button onClick={props.removeNote}>Remove</button></li>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Note\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request =  axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport Note from './components/Note';\n\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div> \n  )\n}\n\nconst App = () => {\n  const [ showAll, setShowAll ] = useState(true)\n  const [ notes, setNotes ] = useState([])\n  const [ newNote, setNewNote ] = useState('')\n\n  const hook = () => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        console.log('promise fulfilled')\n        setNotes(initialNotes)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const showAllChange = (event) => {\n    setShowAll(!showAll)\n  }\n\n  const newNoteChange = (event) => {\n    setNewNote(event.target.value)\n    console.log(event.target.value);\n  }\n\n  const addNewNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        console.log(returnedNote);\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = { ...note, important: !note.important }\n    \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  const removeNoteOf = (id) => {\n    const note = notes.find(note => note.id === id)\n\n    noteService\n      .remove(id)\n      .then(returnedNote => {\n        setNotes(notes.filter(note => note.id !== id))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h2>Notes</h2>\n      <div>Show all notes: {showAll.toString()} <button onClick={showAllChange}>Change</button> </div>\n      <div>\n        <input value={newNote} onChange={newNoteChange}/> <button onClick={addNewNote}>Add</button>\n      </div>\n      <ul>\n        {notes.map(note => \n          <Note key={note.id} note={note} showAll={showAll} toggleImportance={() => toggleImportanceOf(note.id)} removeNote={() => removeNoteOf(note.id)} />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}